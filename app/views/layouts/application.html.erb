<!DOCTYPE html>
<html class="h-full">
  <head>
    <title><%= content_for(:title) || "Bot Football" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <script>
      (function() {
        try {
          var stored = localStorage.getItem('theme');
          var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          var isDark = stored ? stored === 'dark' : prefersDark;
          var root = document.documentElement;
          if (isDark) {
            root.classList.add('dark');
          } else {
            root.classList.remove('dark');
          }
        } catch (e) {
          // fail silently
        }
      })();
    </script>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body class="min-h-full bg-slate-50 text-slate-900 antialiased dark:bg-slate-950 dark:text-slate-100">
    <header class="sticky top-0 z-30 bg-white/80 dark:bg-slate-950/70 backdrop-blur border-b border-slate-200 dark:border-slate-800">
      <div class="container mx-auto px-4 py-3 flex items-center justify-between">
        <div class="flex items-center gap-3">
          <div class="size-8 rounded-lg bg-slate-900 text-white flex items-center justify-center font-semibold">BF</div>
          <span class="font-semibold">Bot Football</span>
        </div>
        <div class="flex items-center gap-2">
          <nav class="hidden md:flex items-center gap-4 text-sm text-slate-600 dark:text-slate-300">
            <a href="/" class="hover:text-slate-900 dark:hover:text-white">Home</a>
            <a href="#" class="hover:text-slate-900 dark:hover:text-white">Leagues</a>
            <a href="#" class="hover:text-slate-900 dark:hover:text-white">Live</a>
          </nav>
          <button id="theme-toggle" type="button" class="inline-flex items-center gap-2 rounded-md border border-slate-200 dark:border-slate-700 px-2.5 py-1.5 text-sm text-slate-700 dark:text-slate-200 hover:bg-slate-100 dark:hover:bg-slate-900/50 focus:outline-none focus:ring-2 focus:ring-slate-400/50" aria-label="Toggle color theme" title="Toggle theme">
            <span class="inline-flex items-center gap-1 dark:hidden" aria-hidden="true">üåô <span class="hidden sm:inline">Dark</span></span>
            <span class="hidden items-center gap-1 dark:inline-flex" aria-hidden="true">‚òÄÔ∏è <span class="hidden sm:inline">Light</span></span>
            <span class="sr-only">Toggle theme</span>
          </button>
        </div>
      </div>
    </header>

    <main class="container mx-auto px-4 py-6 md:py-10">
      <%= yield %>
    </main>

    <script>
      (function() {
        function setTheme(mode, persist) {
          try {
            var root = document.documentElement;
            if (mode === 'dark') {
              root.classList.add('dark');
            } else {
              root.classList.remove('dark');
            }
            if (persist) {
              localStorage.setItem('theme', mode);
            }
          } catch (e) {
            // ignore
          }
        }

        var btn = document.getElementById('theme-toggle');
        if (btn) {
          btn.addEventListener('click', function() {
            var isDark = document.documentElement.classList.contains('dark');
            setTheme(isDark ? 'light' : 'dark', true);
          });
        }

        try {
          var stored = localStorage.getItem('theme');
          if (!stored && window.matchMedia) {
            var mq = window.matchMedia('(prefers-color-scheme: dark)');
            if (mq.addEventListener) {
              mq.addEventListener('change', function(e) {
                setTheme(e.matches ? 'dark' : 'light', false);
              });
            } else if (mq.addListener) { // Safari <14
              mq.addListener(function(e) {
                setTheme(e.matches ? 'dark' : 'light', false);
              });
            }
          }
        } catch (e) {
          // ignore
        }
      })();
    </script>
  </body>
</html>
